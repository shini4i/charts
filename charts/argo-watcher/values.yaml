replicaCount: 1

backend:
  image:
    repository: ghcr.io/shini4i/argo-watcher
    pullPolicy: IfNotPresent
    tag: "29f510f81a8c83f017b0a04aca538ad28463a2cc"

  argoUrl: https://argocd.example.com
  argoUser: admin

  # -- Existing secret with ARGO_PASSWORD
  existingSecret: ""

  service:
    port: 8080
    containerPort: 8080

  resources: {}

frontend:
  enabled: true

  image:
    repository: ghcr.io/shini4i/argo-watcher-ui
    pullPolicy: IfNotPresent
    tag: "b8eece23ed8c32ddfbe9aec2fa8994e604b37852"

  service:
    port: 3000
    containerPort: 3000

  resources: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          servicePort: 3000
        - path: /api
          pathType: ImplementationSpecific
          servicePort: 8080
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
